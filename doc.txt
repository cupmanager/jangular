Kanske göra nåt sånt här (riktigt builder-pattern så den returnerar en kopia hela tiden):
    
    CupManSingleton.minKompilator = 
    	JangularCompiler.create()
    		.withDirectives(dirRepo)
    		.withTemplateLoader(loader);
    
    JangularCompiler c = 
    	CupManSingleton.minKompilator.
    		.withContextClass(AppEvalContext.class)
    		.withClassLoader(myOwnClassLoader);
    
    CompiledTemplate t = c.compile("largetest.html", AppScope.class);
    CompiledTemplate t = c.compile("largetest.html"); 	// Uses default empty scope
    CompiledTemplate t = c.withClassLoader(makeAClassLoader()).compile("largetest.html");
    
    
    t.eval(scope, sb, context)
    t.getCompileDuration(TimeUnit.MILLISECONDS)
    t.warnings()
    t.usedDirectives()
    t.loadedTemplates()
    t.generatedClasses()
	
    
Går såklart att bara köra:  
    CompiledTemplate t = JangularCompiler.create().compile(new ByteArrayInputStream(myHtmlTemplateAsString));
men då får man inte använda directives, 
eller ladda in templates på något sätt, 
och man kan inte injecta något till controllers, 
och inte spec:a ett grundscope.
    